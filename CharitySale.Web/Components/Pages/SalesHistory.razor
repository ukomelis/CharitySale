@page "/sales"
@using CharitySale.Web.Services
@using CharitySale.Shared.Models
@inject ISaleService SaleService

<h1>Sales History</h1>

@if (_loading)
{
    <div class="loading">Loading sales...</div>
}
else
{
    <div class="sales-history">
        @if (_sales.Count == 0)
        {
            <p>No sales found.</p>
        }
        else
        {
            <table class="sales-table">
                <thead>
                <tr>
                    <th>Date</th>
                    <th>Items</th>
                    <th>Total</th>
                    <th>Amount Paid</th>
                    <th>Change</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var sale in _sales)
                {
                    <tr>
                        <td>@sale.CreatedAt.ToString("g")</td>
                        <td>@sale.Items.Sum(i => i.Quantity) items</td>
                        <td>@sale.TotalAmount.ToString("C")</td>
                        <td>@sale.AmountPaid.ToString("C")</td>
                        <td>@sale.ChangeAmount.ToString("C")</td>
                        <td>
                            <button @onclick="() => ViewSaleDetails(sale)" class="view-button">View</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        }
    </div>
}

@if (_showSaleModal)
{
    <div class="modal">
        <div class="modal-content sale-details">
            <h2>Sale Details</h2>
            <p>Date: @_selectedSale.CreatedAt.ToString("g")</p>

            <h3>Items</h3>
            <table class="items-table">
                <thead>
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Subtotal</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in _selectedSale.Items)
                {
                    <tr>
                        <td>@item.ItemName</td>
                        <td>@item.UnitPrice.ToString("C")</td>
                        <td>@item.Quantity</td>
                        <td>@((item.UnitPrice * item.Quantity).ToString("C"))</td>
                    </tr>
                }
                </tbody>
                <tfoot>
                <tr>
                    <td colspan="3" class="total-label">Total:</td>
                    <td class="total-value">@_selectedSale.TotalAmount.ToString("C")</td>
                </tr>
                <tr>
                    <td colspan="3" class="total-label">Amount Paid:</td>
                    <td class="total-value">@_selectedSale.AmountPaid.ToString("C")</td>
                </tr>
                <tr>
                    <td colspan="3" class="total-label">Change:</td>
                    <td class="total-value">@_selectedSale.ChangeAmount.ToString("C")</td>
                </tr>
                </tfoot>
            </table>

            <button @onclick="CloseSaleDetails" class="close-button">Close</button>
        </div>
    </div>
}

@code {
    private List<Sale> _sales = new();
    private bool _loading = true;
    private bool _showSaleModal = false;
    private Sale _selectedSale = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadSales();
    }

    private async Task LoadSales()
    {
        _loading = true;
        _sales = await SaleService.GetAllSalesAsync();
        _loading = false;
    }

    private void ViewSaleDetails(Sale sale)
    {
        _selectedSale = sale;
        _showSaleModal = true;
    }

    private void CloseSaleDetails()
    {
        _showSaleModal = false;
    }
}

<style>
    .sales-history {
        margin-top: 2rem;
    }

    .sales-table {
        width: 100%;
        border-collapse: collapse;
    }

    .sales-table th,
    .sales-table td {
        padding: 1rem;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .sales-table th {
        background-color: #f5f5f5;
    }

    .view-button {
        background-color: #2196f3;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
    }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .modal-content {
        background-color: white;
        padding: 2rem;
        border-radius: 4px;
        max-width: 800px;
        width: 90%;
        max-height: 90vh;
        overflow-y: auto;
    }

    .sale-details h2 {
        margin-top: 0;
    }

    .items-table {
        width: 100%;
        border-collapse: collapse;
        margin: 1rem 0;
    }

    .items-table th,
    .items-table td {
        padding: 0.5rem;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .items-table th {
        background-color: #f5f5f5;
    }

    .items-table tfoot {
        font-weight: bold;
    }

    .total-label {
        text-align: right;
    }

    .close-button {
        background-color: #f44336;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 1rem;
    }
</style>